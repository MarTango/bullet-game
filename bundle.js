!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);const r=function*(){const t=new Set;for(window.addEventListener("keydown",e=>{const n=e.key.toLowerCase();t.has(n)||t.add(n)}),window.addEventListener("keyup",e=>{const n=e.key.toLowerCase();t.has(n)&&t.delete(n)});;)yield t}(),o=function*(){let t=Date.now();for(;;){let e=Date.now();const n=e-t;t=e,yield n}}();!function(){let t=function(){const t=document.querySelector("canvas"),e=t.getContext("2d"),{width:n,height:r}=t,o=[{id:1,x:Math.random()*n,y:Math.random()*r,r:10,vx:0,vy:0,color:"red"}];return{ctx:e,entities:o}}();const e=t=>function({board:t,click:e,...n}){if(!e)return{...n,board:t};const{x:r,y:o}=e,i=t.entities.filter(t=>t.id).map(t=>{const e=r-t.x,n=o-t.y,i=Math.sqrt(e*e+n*n),a=e/i,c=n/i,s=t.r+2+2;return function(t,e,n,r){return{r:3,color:"black",x:t,y:e,vx:n,vy:r}}(t.x+s*a,t.y+s*c,.4*a,.4*c)});return{...n,click:e,board:{...t,entities:[...t.entities,...i]}}}(function({board:t,keysPressed:e,...n}){const r=.2,o={w:{vy:r},a:{vx:-r},s:{vy:-r},d:{vx:r}},i=Array.from(e).filter(t=>t in o),a=t.entities.filter(t=>t.id).map(t=>i.map(t=>o[t]).reduce((t,e)=>({...t,...e}),{...t,vx:0,vy:0}));return{board:{...t,entities:[...a,...t.entities.filter(t=>!t.id)]},keysPressed:e,...n}}(function({board:t,...e}){return{...e,board:{...t,entities:t.entities.filter((e,n)=>0==t.entities.filter((t,r)=>n!=r&&Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)<Math.pow(e.r+t.r,2)).length)}}}(function({board:t,...e}){const{width:n,height:r}=t.ctx.canvas;return{...e,board:{...t,entities:t.entities.map(({vx:t,vy:e,...o})=>({...o,x:o.x<0?0:o.x>n?n:o.x,y:o.y<0?0:o.y>r?n:o.y,vx:o.x-o.r<0?Math.abs(t):o.x+o.r>n?-Math.abs(t):t,vy:o.y-o.r<0?Math.abs(e):o.y+o.r>r?-Math.abs(e):e}))}}}(function({dt:t=0,board:e,...n}){return{...n,dt:t,board:{...e,entities:e.entities.map(e=>({...e,x:e.x+e.vx*t,y:e.y+e.vy*t}))}}}(t))))),n=function(t){return function*(){const e=[];for(window.addEventListener("mousedown",({offsetX:n,offsetY:r})=>{e.push({x:n,y:t.ctx.canvas.height-r})});;)yield e.pop()}()}(t);requestAnimationFrame((async function i(){await new Promise((t,e)=>setTimeout(t,10));const a={board:t,dt:o.next().value,keysPressed:r.next().value,click:n.next().value};t=e(a).board,function(t){const{height:e,width:n}=t.ctx.canvas;t.ctx.clearRect(0,0,n,e),t.entities.forEach(n=>{t.ctx.beginPath(),t.ctx.arc(n.x,e-n.y,n.r,0,2*Math.PI),t.ctx.fillStyle=n.color,t.ctx.fill(),t.ctx.closePath()})}(t),requestAnimationFrame(i)}))}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,